{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dbaa19b8-3a94-4248-b552-a7d20ff36e62",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Thanks to the data retrieved from Paris OpenData and the geopandas library, we will analyse the location of green spaces in Paris'"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''Thanks to the data retrieved from Paris OpenData and the geopandas library, we will analyse the location of green spaces in Paris'''"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "01a36115-f376-4a69-845c-6c13d5ebc2eb",
   "metadata": {},
   "outputs": [],
   "source": [
    "'''Importing packages'''\n",
    "import pandas as pd\n",
    "import geopandas as gpd\n",
    "import numpy as np\n",
    "import contextily as ctx\n",
    "import matplotlib.pyplot as plt\n",
    "from cartiflette.s3 import download_vectorfile_url_all"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "08342420-4f2e-4a9c-9170-e098444d5172",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://minio.lab.sspcloud.fr/projet-cartiflette/diffusion/shapefiles-test1/year=2022/administrative_level=COMMUNE_ARRONDISSEMENT/crs=2154/DEPARTEMENT=75/vectorfile_format=topojson/provider=IGN/source=EXPRESS-COG-CARTO-TERRITOIRE/raw.topojson\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Downloading: : 729iB [00:00, 1.52MiB/s]\n"
     ]
    },
    {
     "ename": "HTTPError",
     "evalue": "HTTP Error 404: Not Found",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mHTTPError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[36], line 2\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;124;03m'''Let's download the geographical data of Paris to create its map'''\u001b[39;00m\n\u001b[0;32m----> 2\u001b[0m Paris_borders \u001b[38;5;241m=\u001b[39m \u001b[43mdownload_vectorfile_url_all\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m      3\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcrs\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;241;43m2154\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;66;43;03m#Lambert 93\u001b[39;49;00m\n\u001b[1;32m      4\u001b[0m \u001b[43m    \u001b[49m\u001b[43mvalues\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43m75\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m      5\u001b[0m \u001b[43m    \u001b[49m\u001b[43mborders\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mCOMMUNE_ARRONDISSEMENT\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m      6\u001b[0m \u001b[43m    \u001b[49m\u001b[43mvectorfile_format\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mtopojson\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m      7\u001b[0m \u001b[43m    \u001b[49m\u001b[43mfilter_by\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mDEPARTEMENT\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m      8\u001b[0m \u001b[43m    \u001b[49m\u001b[43msource\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mEXPRESS-COG-CARTO-TERRITOIRE\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m      9\u001b[0m \u001b[43m    \u001b[49m\u001b[43myear\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m2022\u001b[39;49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m/opt/mamba/lib/python3.10/site-packages/cartiflette/s3/s3.py:200\u001b[0m, in \u001b[0;36mdownload_vectorfile_url_all\u001b[0;34m(values, borders, vectorfile_format, filter_by, year, provider, source, crs)\u001b[0m\n\u001b[1;32m    197\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(values, (\u001b[38;5;28mstr\u001b[39m, \u001b[38;5;28mint\u001b[39m, \u001b[38;5;28mfloat\u001b[39m)):\n\u001b[1;32m    198\u001b[0m     values \u001b[38;5;241m=\u001b[39m [\u001b[38;5;28mstr\u001b[39m(values)]\n\u001b[0;32m--> 200\u001b[0m vectors \u001b[38;5;241m=\u001b[39m [\n\u001b[1;32m    201\u001b[0m     download_vectorfile_url_single(\n\u001b[1;32m    202\u001b[0m         value\u001b[38;5;241m=\u001b[39mval,\n\u001b[1;32m    203\u001b[0m         borders\u001b[38;5;241m=\u001b[39mborders,\n\u001b[1;32m    204\u001b[0m         vectorfile_format\u001b[38;5;241m=\u001b[39mvectorfile_format,\n\u001b[1;32m    205\u001b[0m         filter_by\u001b[38;5;241m=\u001b[39mfilter_by,\n\u001b[1;32m    206\u001b[0m         year\u001b[38;5;241m=\u001b[39myear,\n\u001b[1;32m    207\u001b[0m         provider\u001b[38;5;241m=\u001b[39mprovider,\n\u001b[1;32m    208\u001b[0m         source\u001b[38;5;241m=\u001b[39msource,\n\u001b[1;32m    209\u001b[0m         crs\u001b[38;5;241m=\u001b[39mcrs,\n\u001b[1;32m    210\u001b[0m     )\n\u001b[1;32m    211\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m val \u001b[38;5;129;01min\u001b[39;00m values\n\u001b[1;32m    212\u001b[0m ]\n\u001b[1;32m    214\u001b[0m vectors \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mconcat(vectors)\n\u001b[1;32m    216\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m vectors\n",
      "File \u001b[0;32m/opt/mamba/lib/python3.10/site-packages/cartiflette/s3/s3.py:201\u001b[0m, in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m    197\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(values, (\u001b[38;5;28mstr\u001b[39m, \u001b[38;5;28mint\u001b[39m, \u001b[38;5;28mfloat\u001b[39m)):\n\u001b[1;32m    198\u001b[0m     values \u001b[38;5;241m=\u001b[39m [\u001b[38;5;28mstr\u001b[39m(values)]\n\u001b[1;32m    200\u001b[0m vectors \u001b[38;5;241m=\u001b[39m [\n\u001b[0;32m--> 201\u001b[0m     \u001b[43mdownload_vectorfile_url_single\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    202\u001b[0m \u001b[43m        \u001b[49m\u001b[43mvalue\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mval\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    203\u001b[0m \u001b[43m        \u001b[49m\u001b[43mborders\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mborders\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    204\u001b[0m \u001b[43m        \u001b[49m\u001b[43mvectorfile_format\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mvectorfile_format\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    205\u001b[0m \u001b[43m        \u001b[49m\u001b[43mfilter_by\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mfilter_by\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    206\u001b[0m \u001b[43m        \u001b[49m\u001b[43myear\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43myear\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    207\u001b[0m \u001b[43m        \u001b[49m\u001b[43mprovider\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mprovider\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    208\u001b[0m \u001b[43m        \u001b[49m\u001b[43msource\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msource\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    209\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcrs\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcrs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    210\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    211\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m val \u001b[38;5;129;01min\u001b[39;00m values\n\u001b[1;32m    212\u001b[0m ]\n\u001b[1;32m    214\u001b[0m vectors \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mconcat(vectors)\n\u001b[1;32m    216\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m vectors\n",
      "File \u001b[0;32m/opt/mamba/lib/python3.10/site-packages/cartiflette/s3/s3.py:347\u001b[0m, in \u001b[0;36mdownload_vectorfile_url_single\u001b[0;34m(value, borders, vectorfile_format, filter_by, year, bucket, path_within_bucket, provider, source, crs)\u001b[0m\n\u001b[1;32m    345\u001b[0m     tmp \u001b[38;5;241m=\u001b[39m tempfile\u001b[38;5;241m.\u001b[39mNamedTemporaryFile(delete\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m)\n\u001b[1;32m    346\u001b[0m     download_pb(url, tmp\u001b[38;5;241m.\u001b[39mname)\n\u001b[0;32m--> 347\u001b[0m     \u001b[38;5;28mobject\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[43mgpd\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mread_file\u001b[49m\u001b[43m(\u001b[49m\u001b[43murl\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdriver\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdriver\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    349\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m format_read \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mtopojson\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n\u001b[1;32m    350\u001b[0m     \u001b[38;5;28mobject\u001b[39m\u001b[38;5;241m.\u001b[39mcrs \u001b[38;5;241m=\u001b[39m crs\n",
      "File \u001b[0;32m/opt/mamba/lib/python3.10/site-packages/geopandas/io/file.py:281\u001b[0m, in \u001b[0;36m_read_file\u001b[0;34m(filename, bbox, mask, rows, engine, **kwargs)\u001b[0m\n\u001b[1;32m    276\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m from_bytes:\n\u001b[1;32m    277\u001b[0m     \u001b[38;5;66;03m# Opening a file via URL or file-like-object above automatically detects a\u001b[39;00m\n\u001b[1;32m    278\u001b[0m     \u001b[38;5;66;03m# zipped file. In order to match that behavior, attempt to add a zip scheme\u001b[39;00m\n\u001b[1;32m    279\u001b[0m     \u001b[38;5;66;03m# if missing.\u001b[39;00m\n\u001b[1;32m    280\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m _is_zip(\u001b[38;5;28mstr\u001b[39m(path_or_bytes)):\n\u001b[0;32m--> 281\u001b[0m         parsed \u001b[38;5;241m=\u001b[39m fiona\u001b[38;5;241m.\u001b[39mparse_path(\u001b[38;5;28mstr\u001b[39m(path_or_bytes))\n\u001b[1;32m    282\u001b[0m         \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(parsed, fiona\u001b[38;5;241m.\u001b[39mpath\u001b[38;5;241m.\u001b[39mParsedPath):\n\u001b[1;32m    283\u001b[0m             \u001b[38;5;66;03m# If fiona is able to parse the path, we can safely look at the scheme\u001b[39;00m\n\u001b[1;32m    284\u001b[0m             \u001b[38;5;66;03m# and update it to have a zip scheme if necessary.\u001b[39;00m\n\u001b[1;32m    285\u001b[0m             schemes \u001b[38;5;241m=\u001b[39m (parsed\u001b[38;5;241m.\u001b[39mscheme \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m)\u001b[38;5;241m.\u001b[39msplit(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m+\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
      "File \u001b[0;32m/opt/mamba/lib/python3.10/urllib/request.py:216\u001b[0m, in \u001b[0;36murlopen\u001b[0;34m(url, data, timeout, cafile, capath, cadefault, context)\u001b[0m\n\u001b[1;32m    214\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    215\u001b[0m     opener \u001b[38;5;241m=\u001b[39m _opener\n\u001b[0;32m--> 216\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mopener\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mopen\u001b[49m\u001b[43m(\u001b[49m\u001b[43murl\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdata\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtimeout\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m/opt/mamba/lib/python3.10/urllib/request.py:525\u001b[0m, in \u001b[0;36mOpenerDirector.open\u001b[0;34m(self, fullurl, data, timeout)\u001b[0m\n\u001b[1;32m    523\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m processor \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mprocess_response\u001b[38;5;241m.\u001b[39mget(protocol, []):\n\u001b[1;32m    524\u001b[0m     meth \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mgetattr\u001b[39m(processor, meth_name)\n\u001b[0;32m--> 525\u001b[0m     response \u001b[38;5;241m=\u001b[39m \u001b[43mmeth\u001b[49m\u001b[43m(\u001b[49m\u001b[43mreq\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mresponse\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    527\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m response\n",
      "File \u001b[0;32m/opt/mamba/lib/python3.10/urllib/request.py:634\u001b[0m, in \u001b[0;36mHTTPErrorProcessor.http_response\u001b[0;34m(self, request, response)\u001b[0m\n\u001b[1;32m    631\u001b[0m \u001b[38;5;66;03m# According to RFC 2616, \"2xx\" code indicates that the client's\u001b[39;00m\n\u001b[1;32m    632\u001b[0m \u001b[38;5;66;03m# request was successfully received, understood, and accepted.\u001b[39;00m\n\u001b[1;32m    633\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m (\u001b[38;5;241m200\u001b[39m \u001b[38;5;241m<\u001b[39m\u001b[38;5;241m=\u001b[39m code \u001b[38;5;241m<\u001b[39m \u001b[38;5;241m300\u001b[39m):\n\u001b[0;32m--> 634\u001b[0m     response \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mparent\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43merror\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    635\u001b[0m \u001b[43m        \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mhttp\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrequest\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mresponse\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcode\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmsg\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mhdrs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    637\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m response\n",
      "File \u001b[0;32m/opt/mamba/lib/python3.10/urllib/request.py:563\u001b[0m, in \u001b[0;36mOpenerDirector.error\u001b[0;34m(self, proto, *args)\u001b[0m\n\u001b[1;32m    561\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m http_err:\n\u001b[1;32m    562\u001b[0m     args \u001b[38;5;241m=\u001b[39m (\u001b[38;5;28mdict\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mdefault\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mhttp_error_default\u001b[39m\u001b[38;5;124m'\u001b[39m) \u001b[38;5;241m+\u001b[39m orig_args\n\u001b[0;32m--> 563\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_call_chain\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m/opt/mamba/lib/python3.10/urllib/request.py:496\u001b[0m, in \u001b[0;36mOpenerDirector._call_chain\u001b[0;34m(self, chain, kind, meth_name, *args)\u001b[0m\n\u001b[1;32m    494\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m handler \u001b[38;5;129;01min\u001b[39;00m handlers:\n\u001b[1;32m    495\u001b[0m     func \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mgetattr\u001b[39m(handler, meth_name)\n\u001b[0;32m--> 496\u001b[0m     result \u001b[38;5;241m=\u001b[39m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    497\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m result \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m    498\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m result\n",
      "File \u001b[0;32m/opt/mamba/lib/python3.10/urllib/request.py:643\u001b[0m, in \u001b[0;36mHTTPDefaultErrorHandler.http_error_default\u001b[0;34m(self, req, fp, code, msg, hdrs)\u001b[0m\n\u001b[1;32m    642\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mhttp_error_default\u001b[39m(\u001b[38;5;28mself\u001b[39m, req, fp, code, msg, hdrs):\n\u001b[0;32m--> 643\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m HTTPError(req\u001b[38;5;241m.\u001b[39mfull_url, code, msg, hdrs, fp)\n",
      "\u001b[0;31mHTTPError\u001b[0m: HTTP Error 404: Not Found"
     ]
    }
   ],
   "source": [
    "'''Let's download the geographical data of Paris to create its map'''\n",
    "Paris_borders = download_vectorfile_url_all(\n",
    "    crs = 2154, #Lambert 93\n",
    "    values = [\"75\"],\n",
    "    borders=\"COMMUNE_ARRONDISSEMENT\",\n",
    "    vectorfile_format=\"topojson\",\n",
    "    filter_by=\"DEPARTEMENT\",\n",
    "    source=\"EXPRESS-COG-CARTO-TERRITOIRE\",\n",
    "    year=2022)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "59a27446-66cb-4c7f-bba1-1da9d169315e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>ID</th>\n",
       "      <th>NOM</th>\n",
       "      <th>NOM_M</th>\n",
       "      <th>INSEE_COM</th>\n",
       "      <th>STATUT</th>\n",
       "      <th>POPULATION</th>\n",
       "      <th>INSEE_CAN</th>\n",
       "      <th>INSEE_ARR</th>\n",
       "      <th>INSEE_DEP</th>\n",
       "      <th>INSEE_REG</th>\n",
       "      <th>SIREN_EPCI</th>\n",
       "      <th>source</th>\n",
       "      <th>INSEE_COG</th>\n",
       "      <th>geometry</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ARR_MUNI0000000009736045</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Paris 3e Arrondissement</td>\n",
       "      <td>PARIS 3E ARRONDISSEMENT</td>\n",
       "      <td>75056</td>\n",
       "      <td>Capitale d'état</td>\n",
       "      <td>34025</td>\n",
       "      <td>NR</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>11</td>\n",
       "      <td>200054781</td>\n",
       "      <td>IGN:EXPRESS-COG-CARTO-TERRITOIRE</td>\n",
       "      <td>75103</td>\n",
       "      <td>POLYGON ((2.35016 48.86199, 2.35019 48.86203, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ARR_MUNI0000000009736046</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Paris 2e Arrondissement</td>\n",
       "      <td>PARIS 2E ARRONDISSEMENT</td>\n",
       "      <td>75056</td>\n",
       "      <td>Capitale d'état</td>\n",
       "      <td>21595</td>\n",
       "      <td>NR</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>11</td>\n",
       "      <td>200054781</td>\n",
       "      <td>IGN:EXPRESS-COG-CARTO-TERRITOIRE</td>\n",
       "      <td>75102</td>\n",
       "      <td>POLYGON ((2.34792 48.87069, 2.34827 48.87062, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ARR_MUNI0000000009736545</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Paris 4e Arrondissement</td>\n",
       "      <td>PARIS 4E ARRONDISSEMENT</td>\n",
       "      <td>75056</td>\n",
       "      <td>Capitale d'état</td>\n",
       "      <td>29131</td>\n",
       "      <td>NR</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>11</td>\n",
       "      <td>200054781</td>\n",
       "      <td>IGN:EXPRESS-COG-CARTO-TERRITOIRE</td>\n",
       "      <td>75104</td>\n",
       "      <td>POLYGON ((2.36849 48.85580, 2.36873 48.85482, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>ARR_MUNI0000000009736544</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Paris 5e Arrondissement</td>\n",
       "      <td>PARIS 5E ARRONDISSEMENT</td>\n",
       "      <td>75056</td>\n",
       "      <td>Capitale d'état</td>\n",
       "      <td>58227</td>\n",
       "      <td>NR</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>11</td>\n",
       "      <td>200054781</td>\n",
       "      <td>IGN:EXPRESS-COG-CARTO-TERRITOIRE</td>\n",
       "      <td>75105</td>\n",
       "      <td>POLYGON ((2.33666 48.83967, 2.33672 48.84011, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ARR_MUNI0000000009736543</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Paris 6e Arrondissement</td>\n",
       "      <td>PARIS 6E ARRONDISSEMENT</td>\n",
       "      <td>75056</td>\n",
       "      <td>Capitale d'état</td>\n",
       "      <td>40303</td>\n",
       "      <td>NR</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>11</td>\n",
       "      <td>200054781</td>\n",
       "      <td>IGN:EXPRESS-COG-CARTO-TERRITOIRE</td>\n",
       "      <td>75106</td>\n",
       "      <td>POLYGON ((2.33292 48.85934, 2.33339 48.85924, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>ARR_MUNI0000000009736043</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Paris 9e Arrondissement</td>\n",
       "      <td>PARIS 9E ARRONDISSEMENT</td>\n",
       "      <td>75056</td>\n",
       "      <td>Capitale d'état</td>\n",
       "      <td>60026</td>\n",
       "      <td>NR</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>11</td>\n",
       "      <td>200054781</td>\n",
       "      <td>IGN:EXPRESS-COG-CARTO-TERRITOIRE</td>\n",
       "      <td>75109</td>\n",
       "      <td>POLYGON ((2.32589 48.86958, 2.32597 48.87009, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>ARR_MUNI0000000009736042</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Paris 10e Arrondissement</td>\n",
       "      <td>PARIS 10E ARRONDISSEMENT</td>\n",
       "      <td>75056</td>\n",
       "      <td>Capitale d'état</td>\n",
       "      <td>86472</td>\n",
       "      <td>NR</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>11</td>\n",
       "      <td>200054781</td>\n",
       "      <td>IGN:EXPRESS-COG-CARTO-TERRITOIRE</td>\n",
       "      <td>75110</td>\n",
       "      <td>POLYGON ((2.36471 48.88437, 2.36527 48.88433, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>ARR_MUNI0000000009736035</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Paris 11e Arrondissement</td>\n",
       "      <td>PARIS 11E ARRONDISSEMENT</td>\n",
       "      <td>75056</td>\n",
       "      <td>Capitale d'état</td>\n",
       "      <td>145208</td>\n",
       "      <td>NR</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>11</td>\n",
       "      <td>200054781</td>\n",
       "      <td>IGN:EXPRESS-COG-CARTO-TERRITOIRE</td>\n",
       "      <td>75111</td>\n",
       "      <td>POLYGON ((2.37690 48.87205, 2.37701 48.87195, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>ARR_MUNI0000000009736531</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Paris 13e Arrondissement</td>\n",
       "      <td>PARIS 13E ARRONDISSEMENT</td>\n",
       "      <td>75056</td>\n",
       "      <td>Capitale d'état</td>\n",
       "      <td>180005</td>\n",
       "      <td>NR</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>11</td>\n",
       "      <td>200054781</td>\n",
       "      <td>IGN:EXPRESS-COG-CARTO-TERRITOIRE</td>\n",
       "      <td>75113</td>\n",
       "      <td>POLYGON ((2.34390 48.81577, 2.34394 48.81601, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>ARR_MUNI0000000009736044</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Paris 8e Arrondissement</td>\n",
       "      <td>PARIS 8E ARRONDISSEMENT</td>\n",
       "      <td>75056</td>\n",
       "      <td>Capitale d'état</td>\n",
       "      <td>35655</td>\n",
       "      <td>NR</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>11</td>\n",
       "      <td>200054781</td>\n",
       "      <td>IGN:EXPRESS-COG-CARTO-TERRITOIRE</td>\n",
       "      <td>75108</td>\n",
       "      <td>POLYGON ((2.32717 48.88346, 2.32716 48.88323, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>ARR_MUNI0000000009736541</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Paris 14e Arrondissement</td>\n",
       "      <td>PARIS 14E ARRONDISSEMENT</td>\n",
       "      <td>75056</td>\n",
       "      <td>Capitale d'état</td>\n",
       "      <td>135592</td>\n",
       "      <td>NR</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>11</td>\n",
       "      <td>200054781</td>\n",
       "      <td>IGN:EXPRESS-COG-CARTO-TERRITOIRE</td>\n",
       "      <td>75114</td>\n",
       "      <td>POLYGON ((2.34209 48.83834, 2.34208 48.83830, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>ARR_MUNI0000000009736041</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Paris 17e Arrondissement</td>\n",
       "      <td>PARIS 17E ARRONDISSEMENT</td>\n",
       "      <td>75056</td>\n",
       "      <td>Capitale d'état</td>\n",
       "      <td>166543</td>\n",
       "      <td>NR</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>11</td>\n",
       "      <td>200054781</td>\n",
       "      <td>IGN:EXPRESS-COG-CARTO-TERRITOIRE</td>\n",
       "      <td>75117</td>\n",
       "      <td>POLYGON ((2.32742 48.88351, 2.32734 48.88349, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>ARR_MUNI0000000009736553</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Paris 16e Arrondissement</td>\n",
       "      <td>PARIS 16E ARRONDISSEMENT</td>\n",
       "      <td>75056</td>\n",
       "      <td>Capitale d'état</td>\n",
       "      <td>165523</td>\n",
       "      <td>NR</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>11</td>\n",
       "      <td>200054781</td>\n",
       "      <td>IGN:EXPRESS-COG-CARTO-TERRITOIRE</td>\n",
       "      <td>75116</td>\n",
       "      <td>POLYGON ((2.27995 48.87857, 2.28010 48.87852, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>ARR_MUNI0000000009736033</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Paris 20e Arrondissement</td>\n",
       "      <td>PARIS 20E ARRONDISSEMENT</td>\n",
       "      <td>75056</td>\n",
       "      <td>Capitale d'état</td>\n",
       "      <td>194994</td>\n",
       "      <td>NR</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>11</td>\n",
       "      <td>200054781</td>\n",
       "      <td>IGN:EXPRESS-COG-CARTO-TERRITOIRE</td>\n",
       "      <td>75120</td>\n",
       "      <td>POLYGON ((2.41597 48.84662, 2.41586 48.84663, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>ARR_MUNI0000000009736047</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Paris 1er Arrondissement</td>\n",
       "      <td>PARIS 1ER ARRONDISSEMENT</td>\n",
       "      <td>75056</td>\n",
       "      <td>Capitale d'état</td>\n",
       "      <td>15917</td>\n",
       "      <td>NR</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>11</td>\n",
       "      <td>200054781</td>\n",
       "      <td>IGN:EXPRESS-COG-CARTO-TERRITOIRE</td>\n",
       "      <td>75101</td>\n",
       "      <td>POLYGON ((2.34464 48.85409, 2.34411 48.85428, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>ARR_MUNI0000000009736040</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Paris 18e Arrondissement</td>\n",
       "      <td>PARIS 18E ARRONDISSEMENT</td>\n",
       "      <td>75056</td>\n",
       "      <td>Capitale d'état</td>\n",
       "      <td>192468</td>\n",
       "      <td>NR</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>11</td>\n",
       "      <td>200054781</td>\n",
       "      <td>IGN:EXPRESS-COG-CARTO-TERRITOIRE</td>\n",
       "      <td>75118</td>\n",
       "      <td>POLYGON ((2.37030 48.90185, 2.37025 48.90177, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>ARR_MUNI0000000009736034</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Paris 19e Arrondissement</td>\n",
       "      <td>PARIS 19E ARRONDISSEMENT</td>\n",
       "      <td>75056</td>\n",
       "      <td>Capitale d'état</td>\n",
       "      <td>184573</td>\n",
       "      <td>NR</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>11</td>\n",
       "      <td>200054781</td>\n",
       "      <td>IGN:EXPRESS-COG-CARTO-TERRITOIRE</td>\n",
       "      <td>75119</td>\n",
       "      <td>POLYGON ((2.37690 48.87205, 2.37537 48.87343, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>ARR_MUNI0000000009736542</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Paris 7e Arrondissement</td>\n",
       "      <td>PARIS 7E ARRONDISSEMENT</td>\n",
       "      <td>75056</td>\n",
       "      <td>Capitale d'état</td>\n",
       "      <td>48888</td>\n",
       "      <td>NR</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>11</td>\n",
       "      <td>200054781</td>\n",
       "      <td>IGN:EXPRESS-COG-CARTO-TERRITOIRE</td>\n",
       "      <td>75107</td>\n",
       "      <td>POLYGON ((2.31671 48.84686, 2.31638 48.84677, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>ARR_MUNI0000000009736540</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Paris 15e Arrondissement</td>\n",
       "      <td>PARIS 15E ARRONDISSEMENT</td>\n",
       "      <td>75056</td>\n",
       "      <td>Capitale d'état</td>\n",
       "      <td>230981</td>\n",
       "      <td>NR</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>11</td>\n",
       "      <td>200054781</td>\n",
       "      <td>IGN:EXPRESS-COG-CARTO-TERRITOIRE</td>\n",
       "      <td>75115</td>\n",
       "      <td>POLYGON ((2.26279 48.83392, 2.26356 48.83464, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>ARR_MUNI0000000009736532</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Paris 12e Arrondissement</td>\n",
       "      <td>PARIS 12E ARRONDISSEMENT</td>\n",
       "      <td>75056</td>\n",
       "      <td>Capitale d'état</td>\n",
       "      <td>139297</td>\n",
       "      <td>NR</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>11</td>\n",
       "      <td>200054781</td>\n",
       "      <td>IGN:EXPRESS-COG-CARTO-TERRITOIRE</td>\n",
       "      <td>75112</td>\n",
       "      <td>POLYGON ((2.39007 48.82569, 2.38909 48.82635, ...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                          id  ID                       NOM  \\\n",
       "0   ARR_MUNI0000000009736045 NaN   Paris 3e Arrondissement   \n",
       "1   ARR_MUNI0000000009736046 NaN   Paris 2e Arrondissement   \n",
       "2   ARR_MUNI0000000009736545 NaN   Paris 4e Arrondissement   \n",
       "3   ARR_MUNI0000000009736544 NaN   Paris 5e Arrondissement   \n",
       "4   ARR_MUNI0000000009736543 NaN   Paris 6e Arrondissement   \n",
       "5   ARR_MUNI0000000009736043 NaN   Paris 9e Arrondissement   \n",
       "6   ARR_MUNI0000000009736042 NaN  Paris 10e Arrondissement   \n",
       "7   ARR_MUNI0000000009736035 NaN  Paris 11e Arrondissement   \n",
       "8   ARR_MUNI0000000009736531 NaN  Paris 13e Arrondissement   \n",
       "9   ARR_MUNI0000000009736044 NaN   Paris 8e Arrondissement   \n",
       "10  ARR_MUNI0000000009736541 NaN  Paris 14e Arrondissement   \n",
       "11  ARR_MUNI0000000009736041 NaN  Paris 17e Arrondissement   \n",
       "12  ARR_MUNI0000000009736553 NaN  Paris 16e Arrondissement   \n",
       "13  ARR_MUNI0000000009736033 NaN  Paris 20e Arrondissement   \n",
       "14  ARR_MUNI0000000009736047 NaN  Paris 1er Arrondissement   \n",
       "15  ARR_MUNI0000000009736040 NaN  Paris 18e Arrondissement   \n",
       "16  ARR_MUNI0000000009736034 NaN  Paris 19e Arrondissement   \n",
       "17  ARR_MUNI0000000009736542 NaN   Paris 7e Arrondissement   \n",
       "18  ARR_MUNI0000000009736540 NaN  Paris 15e Arrondissement   \n",
       "19  ARR_MUNI0000000009736532 NaN  Paris 12e Arrondissement   \n",
       "\n",
       "                       NOM_M INSEE_COM           STATUT  POPULATION INSEE_CAN  \\\n",
       "0    PARIS 3E ARRONDISSEMENT     75056  Capitale d'état       34025        NR   \n",
       "1    PARIS 2E ARRONDISSEMENT     75056  Capitale d'état       21595        NR   \n",
       "2    PARIS 4E ARRONDISSEMENT     75056  Capitale d'état       29131        NR   \n",
       "3    PARIS 5E ARRONDISSEMENT     75056  Capitale d'état       58227        NR   \n",
       "4    PARIS 6E ARRONDISSEMENT     75056  Capitale d'état       40303        NR   \n",
       "5    PARIS 9E ARRONDISSEMENT     75056  Capitale d'état       60026        NR   \n",
       "6   PARIS 10E ARRONDISSEMENT     75056  Capitale d'état       86472        NR   \n",
       "7   PARIS 11E ARRONDISSEMENT     75056  Capitale d'état      145208        NR   \n",
       "8   PARIS 13E ARRONDISSEMENT     75056  Capitale d'état      180005        NR   \n",
       "9    PARIS 8E ARRONDISSEMENT     75056  Capitale d'état       35655        NR   \n",
       "10  PARIS 14E ARRONDISSEMENT     75056  Capitale d'état      135592        NR   \n",
       "11  PARIS 17E ARRONDISSEMENT     75056  Capitale d'état      166543        NR   \n",
       "12  PARIS 16E ARRONDISSEMENT     75056  Capitale d'état      165523        NR   \n",
       "13  PARIS 20E ARRONDISSEMENT     75056  Capitale d'état      194994        NR   \n",
       "14  PARIS 1ER ARRONDISSEMENT     75056  Capitale d'état       15917        NR   \n",
       "15  PARIS 18E ARRONDISSEMENT     75056  Capitale d'état      192468        NR   \n",
       "16  PARIS 19E ARRONDISSEMENT     75056  Capitale d'état      184573        NR   \n",
       "17   PARIS 7E ARRONDISSEMENT     75056  Capitale d'état       48888        NR   \n",
       "18  PARIS 15E ARRONDISSEMENT     75056  Capitale d'état      230981        NR   \n",
       "19  PARIS 12E ARRONDISSEMENT     75056  Capitale d'état      139297        NR   \n",
       "\n",
       "   INSEE_ARR INSEE_DEP INSEE_REG SIREN_EPCI                            source  \\\n",
       "0          1        75        11  200054781  IGN:EXPRESS-COG-CARTO-TERRITOIRE   \n",
       "1          1        75        11  200054781  IGN:EXPRESS-COG-CARTO-TERRITOIRE   \n",
       "2          1        75        11  200054781  IGN:EXPRESS-COG-CARTO-TERRITOIRE   \n",
       "3          1        75        11  200054781  IGN:EXPRESS-COG-CARTO-TERRITOIRE   \n",
       "4          1        75        11  200054781  IGN:EXPRESS-COG-CARTO-TERRITOIRE   \n",
       "5          1        75        11  200054781  IGN:EXPRESS-COG-CARTO-TERRITOIRE   \n",
       "6          1        75        11  200054781  IGN:EXPRESS-COG-CARTO-TERRITOIRE   \n",
       "7          1        75        11  200054781  IGN:EXPRESS-COG-CARTO-TERRITOIRE   \n",
       "8          1        75        11  200054781  IGN:EXPRESS-COG-CARTO-TERRITOIRE   \n",
       "9          1        75        11  200054781  IGN:EXPRESS-COG-CARTO-TERRITOIRE   \n",
       "10         1        75        11  200054781  IGN:EXPRESS-COG-CARTO-TERRITOIRE   \n",
       "11         1        75        11  200054781  IGN:EXPRESS-COG-CARTO-TERRITOIRE   \n",
       "12         1        75        11  200054781  IGN:EXPRESS-COG-CARTO-TERRITOIRE   \n",
       "13         1        75        11  200054781  IGN:EXPRESS-COG-CARTO-TERRITOIRE   \n",
       "14         1        75        11  200054781  IGN:EXPRESS-COG-CARTO-TERRITOIRE   \n",
       "15         1        75        11  200054781  IGN:EXPRESS-COG-CARTO-TERRITOIRE   \n",
       "16         1        75        11  200054781  IGN:EXPRESS-COG-CARTO-TERRITOIRE   \n",
       "17         1        75        11  200054781  IGN:EXPRESS-COG-CARTO-TERRITOIRE   \n",
       "18         1        75        11  200054781  IGN:EXPRESS-COG-CARTO-TERRITOIRE   \n",
       "19         1        75        11  200054781  IGN:EXPRESS-COG-CARTO-TERRITOIRE   \n",
       "\n",
       "   INSEE_COG                                           geometry  \n",
       "0      75103  POLYGON ((2.35016 48.86199, 2.35019 48.86203, ...  \n",
       "1      75102  POLYGON ((2.34792 48.87069, 2.34827 48.87062, ...  \n",
       "2      75104  POLYGON ((2.36849 48.85580, 2.36873 48.85482, ...  \n",
       "3      75105  POLYGON ((2.33666 48.83967, 2.33672 48.84011, ...  \n",
       "4      75106  POLYGON ((2.33292 48.85934, 2.33339 48.85924, ...  \n",
       "5      75109  POLYGON ((2.32589 48.86958, 2.32597 48.87009, ...  \n",
       "6      75110  POLYGON ((2.36471 48.88437, 2.36527 48.88433, ...  \n",
       "7      75111  POLYGON ((2.37690 48.87205, 2.37701 48.87195, ...  \n",
       "8      75113  POLYGON ((2.34390 48.81577, 2.34394 48.81601, ...  \n",
       "9      75108  POLYGON ((2.32717 48.88346, 2.32716 48.88323, ...  \n",
       "10     75114  POLYGON ((2.34209 48.83834, 2.34208 48.83830, ...  \n",
       "11     75117  POLYGON ((2.32742 48.88351, 2.32734 48.88349, ...  \n",
       "12     75116  POLYGON ((2.27995 48.87857, 2.28010 48.87852, ...  \n",
       "13     75120  POLYGON ((2.41597 48.84662, 2.41586 48.84663, ...  \n",
       "14     75101  POLYGON ((2.34464 48.85409, 2.34411 48.85428, ...  \n",
       "15     75118  POLYGON ((2.37030 48.90185, 2.37025 48.90177, ...  \n",
       "16     75119  POLYGON ((2.37690 48.87205, 2.37537 48.87343, ...  \n",
       "17     75107  POLYGON ((2.31671 48.84686, 2.31638 48.84677, ...  \n",
       "18     75115  POLYGON ((2.26279 48.83392, 2.26356 48.83464, ...  \n",
       "19     75112  POLYGON ((2.39007 48.82569, 2.38909 48.82635, ...  "
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Paris_borders"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "4498747b-f7d8-46a7-ac0e-3f056203f45c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>nsq_espace_vert</th>\n",
       "      <th>nom_ev</th>\n",
       "      <th>type_ev</th>\n",
       "      <th>categorie</th>\n",
       "      <th>adresse_numero</th>\n",
       "      <th>adresse_complement</th>\n",
       "      <th>adresse_typevoie</th>\n",
       "      <th>adresse_libellevoie</th>\n",
       "      <th>adresse_codepostal</th>\n",
       "      <th>poly_area</th>\n",
       "      <th>...</th>\n",
       "      <th>id_division</th>\n",
       "      <th>id_atelier_horticole</th>\n",
       "      <th>ida3d_enb</th>\n",
       "      <th>site_villes</th>\n",
       "      <th>id_eqpt</th>\n",
       "      <th>competence</th>\n",
       "      <th>geom</th>\n",
       "      <th>url_plan</th>\n",
       "      <th>geom_x_y</th>\n",
       "      <th>geometry</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>221.0</td>\n",
       "      <td>SQUARE FLORENCE BLUMENTHAL</td>\n",
       "      <td>Promenades ouvertes</td>\n",
       "      <td>Square</td>\n",
       "      <td>93.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>RUE DU</td>\n",
       "      <td>CHATEAU DES RENTIERS</td>\n",
       "      <td>75013</td>\n",
       "      <td>1900.0</td>\n",
       "      <td>...</td>\n",
       "      <td>113.0</td>\n",
       "      <td>163.0</td>\n",
       "      <td>52136</td>\n",
       "      <td>3057</td>\n",
       "      <td>3586</td>\n",
       "      <td>CA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>http://p70-planet.apps.paris.mdp/Advitium/Appe...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>POLYGON ((653566.123 6858846.620, 653569.415 6...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>22.0</td>\n",
       "      <td>SQUARE HENRI GALLI</td>\n",
       "      <td>Promenades ouvertes</td>\n",
       "      <td>Square</td>\n",
       "      <td>9.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>BOULEVARD</td>\n",
       "      <td>HENRI IV</td>\n",
       "      <td>75004</td>\n",
       "      <td>2007.0</td>\n",
       "      <td>...</td>\n",
       "      <td>101.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>43332</td>\n",
       "      <td>1824</td>\n",
       "      <td>3610</td>\n",
       "      <td>CA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>http://p70-planet.apps.paris.mdp/Advitium/Appe...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>POLYGON ((653154.640 6861481.308, 653155.008 6...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>744.0</td>\n",
       "      <td>SQUARE SEVERINE</td>\n",
       "      <td>Promenades ouvertes</td>\n",
       "      <td>Square</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>RUE</td>\n",
       "      <td>LE VAU</td>\n",
       "      <td>75020</td>\n",
       "      <td>23885.0</td>\n",
       "      <td>...</td>\n",
       "      <td>120.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>69327</td>\n",
       "      <td>3512</td>\n",
       "      <td>3698</td>\n",
       "      <td>CA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>http://p70-planet.apps.paris.mdp/Advitium/Appe...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>POLYGON ((656805.535 6863062.691, 656806.521 6...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>669.0</td>\n",
       "      <td>SQUARE DU QUAI DE LA LOIRE</td>\n",
       "      <td>Promenades ouvertes</td>\n",
       "      <td>Square</td>\n",
       "      <td>31.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>QUAI DE LA</td>\n",
       "      <td>LOIRE</td>\n",
       "      <td>75019</td>\n",
       "      <td>1128.0</td>\n",
       "      <td>...</td>\n",
       "      <td>119.0</td>\n",
       "      <td>42.0</td>\n",
       "      <td>65690</td>\n",
       "      <td>1533</td>\n",
       "      <td>3569</td>\n",
       "      <td>CA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>http://p70-planet.apps.paris.mdp/Advitium/Appe...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>POLYGON ((654252.356 6865321.278, 654260.456 6...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>11263.0</td>\n",
       "      <td>SQUARE AUGUSTE BALAGNY</td>\n",
       "      <td>Promenades ouvertes</td>\n",
       "      <td>Square</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>RUE</td>\n",
       "      <td>JEAN OESTREICHER</td>\n",
       "      <td>75017</td>\n",
       "      <td>2257.0</td>\n",
       "      <td>...</td>\n",
       "      <td>117.0</td>\n",
       "      <td>34.0</td>\n",
       "      <td>61342</td>\n",
       "      <td>4315</td>\n",
       "      <td>3326</td>\n",
       "      <td>CA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>http://p70-planet.apps.paris.mdp/Advitium/Appe...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>MULTIPOLYGON (((647859.598 6865406.572, 647860...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   nsq_espace_vert                      nom_ev              type_ev categorie  \\\n",
       "0            221.0  SQUARE FLORENCE BLUMENTHAL  Promenades ouvertes    Square   \n",
       "1             22.0          SQUARE HENRI GALLI  Promenades ouvertes    Square   \n",
       "2            744.0             SQUARE SEVERINE  Promenades ouvertes    Square   \n",
       "3            669.0  SQUARE DU QUAI DE LA LOIRE  Promenades ouvertes    Square   \n",
       "4          11263.0      SQUARE AUGUSTE BALAGNY  Promenades ouvertes    Square   \n",
       "\n",
       "   adresse_numero adresse_complement adresse_typevoie   adresse_libellevoie  \\\n",
       "0            93.0                NaN           RUE DU  CHATEAU DES RENTIERS   \n",
       "1             9.0                NaN        BOULEVARD              HENRI IV   \n",
       "2             1.0                NaN              RUE                LE VAU   \n",
       "3            31.0                NaN       QUAI DE LA                 LOIRE   \n",
       "4             1.0                NaN              RUE      JEAN OESTREICHER   \n",
       "\n",
       "  adresse_codepostal  poly_area  ...  id_division  id_atelier_horticole  \\\n",
       "0              75013     1900.0  ...        113.0                 163.0   \n",
       "1              75004     2007.0  ...        101.0                   3.0   \n",
       "2              75020    23885.0  ...        120.0                  45.0   \n",
       "3              75019     1128.0  ...        119.0                  42.0   \n",
       "4              75017     2257.0  ...        117.0                  34.0   \n",
       "\n",
       "  ida3d_enb  site_villes id_eqpt competence geom  \\\n",
       "0     52136         3057    3586         CA  NaN   \n",
       "1     43332         1824    3610         CA  NaN   \n",
       "2     69327         3512    3698         CA  NaN   \n",
       "3     65690         1533    3569         CA  NaN   \n",
       "4     61342         4315    3326         CA  NaN   \n",
       "\n",
       "                                            url_plan  geom_x_y  \\\n",
       "0  http://p70-planet.apps.paris.mdp/Advitium/Appe...       NaN   \n",
       "1  http://p70-planet.apps.paris.mdp/Advitium/Appe...       NaN   \n",
       "2  http://p70-planet.apps.paris.mdp/Advitium/Appe...       NaN   \n",
       "3  http://p70-planet.apps.paris.mdp/Advitium/Appe...       NaN   \n",
       "4  http://p70-planet.apps.paris.mdp/Advitium/Appe...       NaN   \n",
       "\n",
       "                                            geometry  \n",
       "0  POLYGON ((653566.123 6858846.620, 653569.415 6...  \n",
       "1  POLYGON ((653154.640 6861481.308, 653155.008 6...  \n",
       "2  POLYGON ((656805.535 6863062.691, 656806.521 6...  \n",
       "3  POLYGON ((654252.356 6865321.278, 654260.456 6...  \n",
       "4  MULTIPOLYGON (((647859.598 6865406.572, 647860...  \n",
       "\n",
       "[5 rows x 30 columns]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "espaces_verts=gpd.read_file(\"espaces_verts.geojson\").to_crs(2154)\n",
    "espaces_verts.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "093995ae-1a9a-4bcb-89cb-2b573bb96ca4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAEQAAAMWCAYAAABIvSDTAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8g+/7EAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAF0ElEQVR4nO3bsWlDMRRAUSl4gCwQ8BjezZXJWBnKuAopnO/OmFt9p0n4OadSoQfigso3l2VZBncvv/2Av0aQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkNhvk+n0d8zTHPM2n5jYbZPe+u5+PH8fVc5sN8ujwdlh9d255PeT8eR6Xr8vYv+5Xz2w6yE/8iy/zDEFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJAQJQUKQECQECUFCkBAkBAlBQpAQJASJG0BiHuVHJlSSAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 1000x1000 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig,ax = plt.subplots(figsize=(10,10))\n",
    "espaces_verts.plot(ax=ax,alpha=0.8,edgecolor='green',facecolor='green')\n",
    "Paris_borders.boundary.plot(ax = ax, edgecolor = \"black\", facecolor=\"none\",color =None)\n",
    "ax.set_axis_off()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4c99905d-de23-43c7-8473-6bab76a80edb",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "74c8468d-2c57-461a-a6ab-a144345b18a6",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
